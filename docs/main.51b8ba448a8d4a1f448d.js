!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="tjUo")}({tjUo:function(e,t,n){const o=n("y/BS"),r=(e,t)=>{const n=document.getElementById("numerals"),o=n.querySelectorAll("input")[0];o.focus(),o.addEventListener("input",(function(){const o=parseInt(this.value,10)===e;n.querySelectorAll(".tick")[0].style.display=o?"":"none",n.querySelectorAll(".cross")[0].style.display=o?"none":"",o&&setTimeout(t,500)}))};let l;const i=e=>Number(e)||0,u=e=>0===e.length,s=e=>t=>t.slice(0,e),c=e=>t=>t.slice(e),d=e=>e.slice(0).reverse(),a=e=>t=>n=>e(t(n)),y=e=>!e,f=e=>t=>u(t)?[]:[s(e)(t),...f(e)(c(e)(t))],m=e=>{let t=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],n=["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"],o=["","thousand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","octillion","nonillion"];return"number"==typeof e?m(String(e)):"0"===e?"zero":a(f(3))(d)((r=e,Array.from(r))).map(([e,o,r])=>[0===i(r)?"":t[r]+" hundred ",0===i(e)?n[o]:n[o]&&n[o]+"-"||"",t[o+e]||t[e]].join("")).map((e,t)=>""===e?e:`${e} ${o[t]}`).filter(a(y)(u)).reverse().join(" ");var r},p=(e,t)=>function(){o.hide("#numerals",document),o.hide("#initial-number",document);const n=document.getElementById("done");n.querySelectorAll(".result")[0].innerHTML=t+" says "+e,n.querySelectorAll("button")[0].innerHTML="Awesome work! Again?",(()=>{const e=document.getElementById("cat-gif");e.innerHTML="",e.appendChild(l)})(),o.show("#done",document)},h=()=>{(()=>{let e="https://thecatapi.com/api/images/get?format=src&type=gif";e+="&cacheBuster="+(new Date).getTime();const t=new Image;t.style.width="100%",t.onload=function(){console.log(e,"preloaded!"),l=t},t.src=e})();const e=Math.floor(999*Math.random())+1,t=m(e);o.show("#numerals",document),o.hide(".mark-holder span",document),o.hide("#done",document),o.resetAllInputs(document),(e=>{const t=document.getElementById("initial-number");t.style.display="",t.innerHTML="Your number is "+e})(t),r(e,p(e,t))};document.getElementById("done").addEventListener("click",h),h()},"y/BS":function(e,t){e.exports={hide:(e,t)=>{const n=t.querySelectorAll(e);for(let e=0;e<n.length;e++)n[e].style.display="none"},show:(e,t)=>{const n=t.querySelectorAll(e);for(let e=0;e<n.length;e++)n[e].style.display=""},resetAllInputs:e=>{const t=e.querySelectorAll("input");for(let e=0;e<t.length;e++)t[e].value=""}}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,