!function(e){function t(t){for(var r,a,u=t[0],l=t[1],c=t[2],f=0,y=[];f<u.length;f++)a=u[f],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&y.push(o[a][0]),o[a]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(s&&s(t);y.length;)y.shift()();return i.push.apply(i,c||[]),n()}function n(){for(var e,t=0;t<i.length;t++){for(var n=i[t],r=!0,u=1;u<n.length;u++){var l=n[u];0!==o[l]&&(r=!1)}r&&(i.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},o={0:0},i=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var u=window.webpackJsonp=window.webpackJsonp||[],l=u.push.bind(u);u.push=t,u=u.slice();for(var c=0;c<u.length;c++)t(u[c]);var s=l;i.push(["tjUo",1]),n()}({tjUo:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),o=n.n(r),i=n("i8i4");function a(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(e,t)||l(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||l(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){if(e){if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var s,f,y=function(e){return Number(e)||0},d=function(e){return 0===e.length},m=function(e){return function(t){return t.slice(0,e)}},p=function(e){return e.slice(0).reverse()},v=function(e){return function(t){return function(n){return e(t(n))}}},b=function(e){return!e},h=function e(t){var n,r=["","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"],o=["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"],i=["","thousand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","octillion","nonillion"];return"number"==typeof t?e(String(t)):"0"===t?"zero":v(function e(t){return function(n){return d(n)?[]:[m(t)(n)].concat(u(e(t)(function(e){return function(t){return t.slice(e)}}(t)(n))))}}(3))(p)((n=t,Array.from(n))).map((function(e){var t=a(e,3),n=t[0],i=t[1],u=t[2];return[0===y(u)?"":r[u]+" hundred ",0===y(n)?o[i]:o[i]&&o[i]+"-"||"",r[i+n]||r[n]].join("")})).map((function(e,t){return""===e?e:"".concat(e," ").concat(i[t])})).filter(v(b)(d)).reverse().join(" ")},g=function(){return Math.floor(999*Math.random())+1},w=g(),j=h(w),S=function(){return{words:j,numerals:w}},O="https://api.thecatapi.com/api/images/get?format=src&type=gif",A=function(){f=new Promise((function(e,t){O+="&cacheBuster="+(new Date).getTime();var n=new Image;n.style.width="100%",n.onload=function(){console.log(O,"preloaded!"),s=n.src,e()},n.onerror=function(e){t(e)},n.src=O}))},E=function(){return f||A(),f.then((function(){return f=null,s}))};function I(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return x(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var N=function(){var e=I(o.a.useState(""),2),t=e[0],n=e[1],r=I(o.a.useState(null),2),i=r[0],a=r[1],u=I(o.a.useState(E()),2),l=u[0],c=u[1],s=function(){return null!=i&&i?"":"none"},f=function(){return null!=i&&i?"none":""};return o.a.createElement("div",{id:"rendered-by-react"},o.a.createElement("div",{id:"question-row",className:"row",style:{display:f()}},"Your number is ",S().words),o.a.createElement("div",{id:"answer-row",className:"row",style:{display:f()}},"In numerals this says: ",o.a.createElement("input",{type:"number",max:"9999",min:"0",step:"1",value:t,onChange:function(e){var t=e.target.value,r=parseInt(t,10);n(t);var o=r===w;a(o),o&&E().then((function(e){c(e)}))}}),o.a.createElement("div",{className:"mark-holder"},o.a.createElement("span",{className:"tick",style:{display:s()}},"✓"),o.a.createElement("span",{className:"cross",style:{display:null==i||i?"none":""}},"✘"))),o.a.createElement("div",{id:"done",className:"row",style:{display:s()}},o.a.createElement("div",{className:"result done-row"},"Yes! ",S().words," says ",S().numerals),o.a.createElement("div",{className:"done-row"},o.a.createElement("button",{onClick:function(){w=g(),j=h(w),n(""),a(null),c("")}},"Awesome, Again?")),o.a.createElement("div",{id:"cat-gif",className:"done-row"},o.a.createElement("img",{src:l,alt:"a cute random cat gif to celebrate your success"}))))};Object(i.hydrate)(o.a.createElement(N,null),document.getElementById("root"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbnZlcnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL29uU3VjY2Vzcy9jYXQtZ2lmcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcXVlc3Rpb24vcXVlc3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL05hbWV5TnVtYmVycy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImV4ZWN1dGVNb2R1bGVzIiwiaSIsInJlc29sdmVzIiwibGVuZ3RoIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5zdGFsbGVkQ2h1bmtzIiwicHVzaCIsIm1vZHVsZXMiLCJwYXJlbnRKc29ucEZ1bmN0aW9uIiwic2hpZnQiLCJkZWZlcnJlZE1vZHVsZXMiLCJhcHBseSIsImNoZWNrRGVmZXJyZWRNb2R1bGVzIiwicmVzdWx0IiwiZGVmZXJyZWRNb2R1bGUiLCJmdWxmaWxsZWQiLCJqIiwiZGVwSWQiLCJzcGxpY2UiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwicyIsImluc3RhbGxlZE1vZHVsZXMiLCIwIiwiZXhwb3J0cyIsIm1vZHVsZSIsImwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicCIsImpzb25wQXJyYXkiLCJ3aW5kb3ciLCJvbGRKc29ucEZ1bmN0aW9uIiwic2xpY2UiLCJuZXh0VXJsIiwicHJlbG9hZCIsIm51bSIsIngiLCJOdW1iZXIiLCJpc0VtcHR5IiwieHMiLCJ0YWtlIiwicmV2ZXJzZSIsImNvbXAiLCJmIiwiZyIsIm5vdCIsIm51bVRvV29yZHMiLCJhIiwiYiIsIlN0cmluZyIsImNodW5rIiwiZHJvcCIsIkFycmF5IiwiZnJvbSIsIm1hcCIsIm9uZXMiLCJ0ZW5zIiwiaHVucyIsImpvaW4iLCJncm91cCIsImZpbHRlciIsIm5leHRSYW5kb20iLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJudW1lcmFscyIsIndvcmRzIiwiY29udmVydCIsInJlYWQiLCJjYXRHaWZVcmwiLCJwcmVsb2FkTmV4dENhdEdpZiIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiRGF0ZSIsImdldFRpbWUiLCJpbWFnZSIsIkltYWdlIiwic3R5bGUiLCJ3aWR0aCIsIm9ubG9hZCIsImNvbnNvbGUiLCJsb2ciLCJzcmMiLCJvbmVycm9yIiwiZSIsIm5leHRDYXRHaWZVcmwiLCJ0aGVuIiwiTmFtZXlOdW1iZXJzIiwiUmVhY3QiLCJ1c2VTdGF0ZSIsImFuc3dlciIsInNldEFuc3dlciIsImFuc3dlcklzQ29ycmVjdCIsInNldEFuc3dlcklzQ29ycmVjdCIsImNhdEdpZnMiLCJuZXh0Q2F0R2lmIiwic2V0TmV4dENhdEdpZiIsInNob3dXaGVuQ29ycmVjdCIsImhpZGVXaGVuQ29ycmVjdCIsImlkIiwiY2xhc3NOYW1lIiwiZGlzcGxheSIsInF1ZXN0aW9uIiwidHlwZSIsIm1heCIsIm1pbiIsInN0ZXAiLCJvbkNoYW5nZSIsImV2ZW50IiwiaW5wdXRWYWx1ZSIsInRhcmdldCIsInByb3ZpZGVkQW5zd2VyIiwicGFyc2VJbnQiLCJpc0NvcnJlY3QiLCJ1cmwiLCJvbkNsaWNrIiwiYWx0IiwiaHlkcmF0ZSIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiXSwibWFwcGluZ3MiOiJhQUNFLFNBQVNBLEVBQXFCQyxHQVE3QixJQVBBLElBTUlDLEVBQVVDLEVBTlZDLEVBQVdILEVBQUssR0FDaEJJLEVBQWNKLEVBQUssR0FDbkJL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QixHQUNKbEIsRUFBY2tCLFNBK0JsQix5QkFBS2QsVUFBVSxlQUNiLDBCQUFNQSxVQUFVLE9BQU92QixNQUFPLENBQUN3QixRQUFTSixNQUF4QyxLQUNBLDBCQUFNRyxVQUFVLFFBQVF2QixNQUFPLENBQUN3QixRQXJCakIsTUFBbkJULEdBQTJCQSxFQUFrQixPQUFTLEtBcUJsRCxPQUdKLHlCQUFLTyxHQUFHLE9BQU9DLFVBQVUsTUFBTXZCLE1BQU8sQ0FBQ3dCLFFBQVNKLE1BQzlDLHlCQUFLRyxVQUFVLG1CQUFmLFFBQ1FFLElBQWdCckMsTUFEeEIsU0FDcUNxQyxJQUFnQnRDLFVBRXJELHlCQUFLb0MsVUFBVSxZQUNiLDRCQUFRZSxRQTNCSSxXRHhCbEJuRCxFQUFXSixJQUNYSyxFQUFRQyxFQUF3QkYsR0N5QjlCMkIsRUFBVSxJQUNWRSxFQUFtQixNQUNuQkcsRUFBYyxNQXVCVixvQkFJRix5QkFBS0csR0FBRyxVQUFVQyxVQUFVLFlBQzFCLHlCQUFLbEIsSUFBS2EsRUFBWXFCLElBQUksd0RDNURsQ0Msa0JBQVEsa0JBQUMsRUFBRCxNQUFrQkMsU0FBU0MsZUFBZSIsImZpbGUiOiJtYWluLmFkZGEwNTM5OWY0NTlkNGVlOWYxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gaW5zdGFsbCBhIEpTT05QIGNhbGxiYWNrIGZvciBjaHVuayBsb2FkaW5nXG4gXHRmdW5jdGlvbiB3ZWJwYWNrSnNvbnBDYWxsYmFjayhkYXRhKSB7XG4gXHRcdHZhciBjaHVua0lkcyA9IGRhdGFbMF07XG4gXHRcdHZhciBtb3JlTW9kdWxlcyA9IGRhdGFbMV07XG4gXHRcdHZhciBleGVjdXRlTW9kdWxlcyA9IGRhdGFbMl07XG5cbiBcdFx0Ly8gYWRkIFwibW9yZU1vZHVsZXNcIiB0byB0aGUgbW9kdWxlcyBvYmplY3QsXG4gXHRcdC8vIHRoZW4gZmxhZyBhbGwgXCJjaHVua0lkc1wiIGFzIGxvYWRlZCBhbmQgZmlyZSBjYWxsYmFja1xuIFx0XHR2YXIgbW9kdWxlSWQsIGNodW5rSWQsIGkgPSAwLCByZXNvbHZlcyA9IFtdO1xuIFx0XHRmb3IoO2kgPCBjaHVua0lkcy5sZW5ndGg7IGkrKykge1xuIFx0XHRcdGNodW5rSWQgPSBjaHVua0lkc1tpXTtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaW5zdGFsbGVkQ2h1bmtzLCBjaHVua0lkKSAmJiBpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHRcdHJlc29sdmVzLnB1c2goaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKTtcbiBcdFx0XHR9XG4gXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gMDtcbiBcdFx0fVxuIFx0XHRmb3IobW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG4gXHRcdGlmKHBhcmVudEpzb25wRnVuY3Rpb24pIHBhcmVudEpzb25wRnVuY3Rpb24oZGF0YSk7XG5cbiBcdFx0d2hpbGUocmVzb2x2ZXMubGVuZ3RoKSB7XG4gXHRcdFx0cmVzb2x2ZXMuc2hpZnQoKSgpO1xuIFx0XHR9XG5cbiBcdFx0Ly8gYWRkIGVudHJ5IG1vZHVsZXMgZnJvbSBsb2FkZWQgY2h1bmsgdG8gZGVmZXJyZWQgbGlzdFxuIFx0XHRkZWZlcnJlZE1vZHVsZXMucHVzaC5hcHBseShkZWZlcnJlZE1vZHVsZXMsIGV4ZWN1dGVNb2R1bGVzIHx8IFtdKTtcblxuIFx0XHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIGFsbCBjaHVua3MgcmVhZHlcbiBcdFx0cmV0dXJuIGNoZWNrRGVmZXJyZWRNb2R1bGVzKCk7XG4gXHR9O1xuIFx0ZnVuY3Rpb24gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKSB7XG4gXHRcdHZhciByZXN1bHQ7XG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZWZlcnJlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgZGVmZXJyZWRNb2R1bGUgPSBkZWZlcnJlZE1vZHVsZXNbaV07XG4gXHRcdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG4gXHRcdFx0Zm9yKHZhciBqID0gMTsgaiA8IGRlZmVycmVkTW9kdWxlLmxlbmd0aDsgaisrKSB7XG4gXHRcdFx0XHR2YXIgZGVwSWQgPSBkZWZlcnJlZE1vZHVsZVtqXTtcbiBcdFx0XHRcdGlmKGluc3RhbGxlZENodW5rc1tkZXBJZF0gIT09IDApIGZ1bGZpbGxlZCA9IGZhbHNlO1xuIFx0XHRcdH1cbiBcdFx0XHRpZihmdWxmaWxsZWQpIHtcbiBcdFx0XHRcdGRlZmVycmVkTW9kdWxlcy5zcGxpY2UoaS0tLCAxKTtcbiBcdFx0XHRcdHJlc3VsdCA9IF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gZGVmZXJyZWRNb2R1bGVbMF0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdHJldHVybiByZXN1bHQ7XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHQvLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbiBcdC8vIFByb21pc2UgPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHQwOiAwXG4gXHR9O1xuXG4gXHR2YXIgZGVmZXJyZWRNb2R1bGVzID0gW107XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdHZhciBqc29ucEFycmF5ID0gd2luZG93W1wid2VicGFja0pzb25wXCJdID0gd2luZG93W1wid2VicGFja0pzb25wXCJdIHx8IFtdO1xuIFx0dmFyIG9sZEpzb25wRnVuY3Rpb24gPSBqc29ucEFycmF5LnB1c2guYmluZChqc29ucEFycmF5KTtcbiBcdGpzb25wQXJyYXkucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrO1xuIFx0anNvbnBBcnJheSA9IGpzb25wQXJyYXkuc2xpY2UoKTtcbiBcdGZvcih2YXIgaSA9IDA7IGkgPCBqc29ucEFycmF5Lmxlbmd0aDsgaSsrKSB3ZWJwYWNrSnNvbnBDYWxsYmFjayhqc29ucEFycmF5W2ldKTtcbiBcdHZhciBwYXJlbnRKc29ucEZ1bmN0aW9uID0gb2xkSnNvbnBGdW5jdGlvbjtcblxuXG4gXHQvLyBhZGQgZW50cnkgbW9kdWxlIHRvIGRlZmVycmVkIGxpc3RcbiBcdGRlZmVycmVkTW9kdWxlcy5wdXNoKFtcInRqVW9cIiwxXSk7XG4gXHQvLyBydW4gZGVmZXJyZWQgbW9kdWxlcyB3aGVuIHJlYWR5XG4gXHRyZXR1cm4gY2hlY2tEZWZlcnJlZE1vZHVsZXMoKTtcbiIsImNvbnN0IGFyciA9IHggPT4gQXJyYXkuZnJvbSh4KTtcbmNvbnN0IG51bSA9IHggPT4gTnVtYmVyKHgpIHx8IDA7XG5jb25zdCBpc0VtcHR5ID0geHMgPT4geHMubGVuZ3RoID09PSAwO1xuY29uc3QgdGFrZSA9IG4gPT4geHMgPT4geHMuc2xpY2UoMCwgbik7XG5jb25zdCBkcm9wID0gbiA9PiB4cyA9PiB4cy5zbGljZShuKTtcbmNvbnN0IHJldmVyc2UgPSB4cyA9PiB4cy5zbGljZSgwKS5yZXZlcnNlKCk7XG5jb25zdCBjb21wID0gZiA9PiBnID0+IHggPT4gZihnKHgpKTtcbmNvbnN0IG5vdCA9IHggPT4gIXg7XG5jb25zdCBjaHVuayA9IG4gPT4geHMgPT5cbiAgaXNFbXB0eSh4cykgPyBbXSA6IFt0YWtlKG4pKHhzKSwgLi4uY2h1bmsobikoZHJvcChuKSh4cykpXTtcblxuXG4vLyBzdG9sZW4gZnJvbSBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzA1MjQ5MTVcbmNvbnN0IG51bVRvV29yZHMgPSBuID0+IHtcblxuICBsZXQgYSA9IFtcbiAgICAnJywgJ29uZScsICd0d28nLCAndGhyZWUnLCAnZm91cicsXG4gICAgJ2ZpdmUnLCAnc2l4JywgJ3NldmVuJywgJ2VpZ2h0JywgJ25pbmUnLFxuICAgICd0ZW4nLCAnZWxldmVuJywgJ3R3ZWx2ZScsICd0aGlydGVlbicsICdmb3VydGVlbicsXG4gICAgJ2ZpZnRlZW4nLCAnc2l4dGVlbicsICdzZXZlbnRlZW4nLCAnZWlnaHRlZW4nLCAnbmluZXRlZW4nXG4gIF07XG5cbiAgbGV0IGIgPSBbXG4gICAgJycsICcnLCAndHdlbnR5JywgJ3RoaXJ0eScsICdmb3J0eScsXG4gICAgJ2ZpZnR5JywgJ3NpeHR5JywgJ3NldmVudHknLCAnZWlnaHR5JywgJ25pbmV0eSdcbiAgXTtcblxuICBsZXQgZyA9IFtcbiAgICAnJywgJ3Rob3VzYW5kJywgJ21pbGxpb24nLCAnYmlsbGlvbicsICd0cmlsbGlvbicsICdxdWFkcmlsbGlvbicsXG4gICAgJ3F1aW50aWxsaW9uJywgJ3NleHRpbGxpb24nLCAnc2VwdGlsbGlvbicsICdvY3RpbGxpb24nLCAnbm9uaWxsaW9uJ1xuICBdO1xuXG4gIC8vIHRoaXMgcGFydCBpcyByZWFsbHkgbmFzdHkgc3RpbGxcbiAgLy8gaXQgbWlnaHQgZWRpdCB0aGlzIGFnYWluIGxhdGVyIHRvIHNob3cgaG93IE1vbm9pZHMgY291bGQgZml4IHRoaXMgdXBcbiAgbGV0IG1ha2VHcm91cCA9IChbb25lcywgdGVucywgaHVuc10pID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAgbnVtKGh1bnMpID09PSAwID8gJycgOiBhW2h1bnNdICsgJyBodW5kcmVkICcsXG4gICAgICBudW0ob25lcykgPT09IDAgPyBiW3RlbnNdIDogYlt0ZW5zXSAmJiBiW3RlbnNdICsgJy0nIHx8ICcnLFxuICAgICAgYVt0ZW5zICsgb25lc10gfHwgYVtvbmVzXVxuICAgIF0uam9pbignJyk7XG4gIH07XG5cbiAgbGV0IHRob3VzYW5kID0gKGdyb3VwLCBpKSA9PiBncm91cCA9PT0gJycgPyBncm91cCA6IGAke2dyb3VwfSAke2dbaV19YDtcblxuICBpZiAodHlwZW9mIG4gPT09ICdudW1iZXInKVxuICAgIHJldHVybiBudW1Ub1dvcmRzKFN0cmluZyhuKSk7XG4gIGVsc2UgaWYgKG4gPT09ICcwJylcbiAgICByZXR1cm4gJ3plcm8nO1xuICBlbHNlXG4gICAgcmV0dXJuIGNvbXAoY2h1bmsoMykpKHJldmVyc2UpKGFycihuKSlcbiAgICAgIC5tYXAobWFrZUdyb3VwKVxuICAgICAgLm1hcCh0aG91c2FuZClcbiAgICAgIC5maWx0ZXIoY29tcChub3QpKGlzRW1wdHkpKVxuICAgICAgLnJldmVyc2UoKVxuICAgICAgLmpvaW4oJyAnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbnVtZXJhbHNUb1dvcmRzOiBudW1Ub1dvcmRzXG59O1xuIiwibGV0IGNhdEdpZlVybCA9IFwiaHR0cHM6Ly9hcGkudGhlY2F0YXBpLmNvbS9hcGkvaW1hZ2VzL2dldD9mb3JtYXQ9c3JjJnR5cGU9Z2lmXCI7XG5sZXQgbmV4dFVybDtcbmxldCBuZXh0SW1hZ2U7XG5sZXQgcHJlbG9hZFxuXG5leHBvcnQgY29uc3QgcHJlbG9hZE5leHRDYXRHaWYgPSAoKSA9PiB7XG4gIHByZWxvYWQgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY2F0R2lmVXJsICs9IFwiJmNhY2hlQnVzdGVyPVwiICsgbmV3IERhdGUoKS5nZXRUaW1lKCk7XG5cbiAgICBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgIGltYWdlLnN0eWxlLndpZHRoID0gJzEwMCUnO1xuICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNvbnNvbGUubG9nKGNhdEdpZlVybCwgJ3ByZWxvYWRlZCEnKVxuICAgICAgbmV4dEltYWdlID0gaW1hZ2U7XG4gICAgICBuZXh0VXJsID0gbmV4dEltYWdlLnNyY1xuICAgICAgcmVzb2x2ZSgpO1xuICAgIH1cbiAgICBpbWFnZS5vbmVycm9yID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJlamVjdChlKVxuICAgIH1cbiAgICBpbWFnZS5zcmMgPSBjYXRHaWZVcmw7XG4gIH0pXG5cblxufTtcblxuZXhwb3J0IGNvbnN0IGFkZENhdEltYWdlID0gKGpzRWxlbWVudCkgPT4ge1xuICBpZiAoIXByZWxvYWQpIHtcbiAgICBwcmVsb2FkTmV4dENhdEdpZigpXG4gIH1cblxuICBwcmVsb2FkLnRoZW4oKCkgPT4ge1xuICAgIGpzRWxlbWVudC5pbm5lckhUTUwgPSAnJztcbiAgICBqc0VsZW1lbnQuYXBwZW5kQ2hpbGQobmV4dEltYWdlKTtcbiAgfSkudGhlbigoKSA9PiB7XG4gICAgcHJlbG9hZCA9IG51bGw7XG4gICAgcHJlbG9hZE5leHRDYXRHaWYoKTtcbiAgfSlcbn07XG5cbmV4cG9ydCBjb25zdCBuZXh0Q2F0R2lmVXJsID0gKCkgPT4ge1xuICBpZiAoIXByZWxvYWQpIHtcbiAgICBwcmVsb2FkTmV4dENhdEdpZigpXG4gIH1cbiAgcmV0dXJuIHByZWxvYWQudGhlbigoKSA9PiB7XG4gICAgcHJlbG9hZCA9IG51bGw7XG4gICAgcmV0dXJuIG5leHRVcmxcbiAgfSlcbn1cbiIsImltcG9ydCBjb252ZXJ0IGZyb20gXCIuLi9jb252ZXJ0XCI7XG5cbmNvbnN0IG5leHRSYW5kb20gPSAoKSA9PiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA5OTkpICsgMTtcblxubGV0IG51bWVyYWxzID0gbmV4dFJhbmRvbSgpO1xubGV0IHdvcmRzID0gY29udmVydC5udW1lcmFsc1RvV29yZHMobnVtZXJhbHMpO1xuXG5leHBvcnQgY29uc3QgdHJpZ2dlck5leHQgPSAoKSA9PiB7XG4gIG51bWVyYWxzID0gbmV4dFJhbmRvbSgpO1xuICB3b3JkcyA9IGNvbnZlcnQubnVtZXJhbHNUb1dvcmRzKG51bWVyYWxzKTtcbn1cblxuZXhwb3J0IGNvbnN0IGNoZWNrQW5zd2VyID0gKGEpID0+IGEgPT09IG51bWVyYWxzXG5leHBvcnQgY29uc3QgcmVhZCA9ICgpID0+ICh7d29yZHMsIG51bWVyYWxzfSlcblxuIiwiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0ICogYXMgcXVlc3Rpb24gZnJvbSBcIi4vcXVlc3Rpb24vcXVlc3Rpb25cIjtcbmltcG9ydCAqIGFzIGNhdEdpZnMgZnJvbSBcIi4vb25TdWNjZXNzL2NhdC1naWZzXCI7XG5cbmNvbnN0IE5hbWV5TnVtYmVycyA9ICgpID0+IHtcbiAgY29uc3QgW2Fuc3dlciwgc2V0QW5zd2VyXSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpXG4gIGNvbnN0IFthbnN3ZXJJc0NvcnJlY3QsIHNldEFuc3dlcklzQ29ycmVjdF0gPSBSZWFjdC51c2VTdGF0ZShudWxsKVxuICBjb25zdCBbbmV4dENhdEdpZiwgc2V0TmV4dENhdEdpZl0gPSBSZWFjdC51c2VTdGF0ZShjYXRHaWZzLm5leHRDYXRHaWZVcmwoKSlcbiAgXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IGV2ZW50ID0+IHtcbiAgICBjb25zdCBpbnB1dFZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xuICAgIGNvbnN0IHByb3ZpZGVkQW5zd2VyID0gcGFyc2VJbnQoaW5wdXRWYWx1ZSwgMTApO1xuICAgIHNldEFuc3dlcihpbnB1dFZhbHVlKVxuICAgIGNvbnN0IGlzQ29ycmVjdCA9IHF1ZXN0aW9uLmNoZWNrQW5zd2VyKHByb3ZpZGVkQW5zd2VyKTtcbiAgICBzZXRBbnN3ZXJJc0NvcnJlY3QoaXNDb3JyZWN0KVxuICAgIGlmKGlzQ29ycmVjdCkge1xuICAgICAgY2F0R2lmcy5uZXh0Q2F0R2lmVXJsKClcbiAgICAgICAgLnRoZW4odXJsID0+IHtcbiAgICAgICAgICBzZXROZXh0Q2F0R2lmKHVybClcbiAgICAgICAgfSlcbiAgICB9XG4gIH07XG5cbiAgY29uc3Qgc2hvd1doZW5Db3JyZWN0ID0gKCkgPT5cbiAgICBhbnN3ZXJJc0NvcnJlY3QgPT0gbnVsbCB8fCAhYW5zd2VySXNDb3JyZWN0ID8gXCJub25lXCIgOiBcIlwiO1xuXG4gIGNvbnN0IGhpZGVXaGVuQ29ycmVjdCA9ICgpID0+XG4gICAgYW5zd2VySXNDb3JyZWN0ID09IG51bGwgfHwgIWFuc3dlcklzQ29ycmVjdCA/IFwiXCIgOiBcIm5vbmVcIlxuXG4gIGNvbnN0IHNob3dXaGVuV3JvbmcgPSAoKSA9PlxuICAgIGFuc3dlcklzQ29ycmVjdCA9PSBudWxsIHx8IGFuc3dlcklzQ29ycmVjdCA/IFwibm9uZVwiIDogXCJcIjtcblxuICBjb25zdCByZXNldFBhZ2UgPSAoKSA9PiB7XG4gICAgcXVlc3Rpb24udHJpZ2dlck5leHQoKVxuICAgIHNldEFuc3dlcihcIlwiKVxuICAgIHNldEFuc3dlcklzQ29ycmVjdChudWxsKVxuICAgIHNldE5leHRDYXRHaWYoXCJcIilcbiAgfVxuXG4gIHJldHVybiA8ZGl2IGlkPVwicmVuZGVyZWQtYnktcmVhY3RcIj5cblxuICAgIDxkaXYgaWQ9XCJxdWVzdGlvbi1yb3dcIiBjbGFzc05hbWU9XCJyb3dcIiBzdHlsZT17e2Rpc3BsYXk6IGhpZGVXaGVuQ29ycmVjdCgpfX0+XG4gICAgICBZb3VyIG51bWJlciBpcyB7cXVlc3Rpb24ucmVhZCgpLndvcmRzfVxuICAgIDwvZGl2PlxuICAgIDxkaXYgaWQ9XCJhbnN3ZXItcm93XCIgY2xhc3NOYW1lPVwicm93XCIgc3R5bGU9e3tkaXNwbGF5OiBoaWRlV2hlbkNvcnJlY3QoKX19PlxuICAgICAgSW4gbnVtZXJhbHMgdGhpcyBzYXlzOiA8aW5wdXRcbiAgICAgICAgdHlwZT1cIm51bWJlclwiIG1heD1cIjk5OTlcIiBtaW49XCIwXCIgc3RlcD1cIjFcIlxuICAgICAgICB2YWx1ZT17YW5zd2VyfSBvbkNoYW5nZT17aGFuZGxlQ2hhbmdlfVxuICAgICAgLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibWFyay1ob2xkZXJcIj5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGlja1wiIHN0eWxlPXt7ZGlzcGxheTogc2hvd1doZW5Db3JyZWN0KCl9fT7inJM8L3NwYW4+XG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImNyb3NzXCIgc3R5bGU9e3tkaXNwbGF5OiBzaG93V2hlbldyb25nKCl9fT7inJg8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGlkPVwiZG9uZVwiIGNsYXNzTmFtZT1cInJvd1wiIHN0eWxlPXt7ZGlzcGxheTogc2hvd1doZW5Db3JyZWN0KCl9fT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicmVzdWx0IGRvbmUtcm93XCI+XG4gICAgICAgIFllcyEge3F1ZXN0aW9uLnJlYWQoKS53b3Jkc30gc2F5cyB7cXVlc3Rpb24ucmVhZCgpLm51bWVyYWxzfVxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImRvbmUtcm93XCI+XG4gICAgICAgIDxidXR0b24gb25DbGljaz17cmVzZXRQYWdlfT5cbiAgICAgICAgICBBd2Vzb21lLCBBZ2Fpbj9cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgaWQ9XCJjYXQtZ2lmXCIgY2xhc3NOYW1lPVwiZG9uZS1yb3dcIj5cbiAgICAgICAgPGltZyBzcmM9e25leHRDYXRHaWZ9IGFsdD1cImEgY3V0ZSByYW5kb20gY2F0IGdpZiB0byBjZWxlYnJhdGUgeW91ciBzdWNjZXNzXCIvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxufVxuXG5leHBvcnQgZGVmYXVsdCBOYW1leU51bWJlcnM7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQge2h5ZHJhdGV9IGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCBOYW1leU51bWJlcnMgZnJvbSAnLi9OYW1leU51bWJlcnMnXG5cbmh5ZHJhdGUoPE5hbWV5TnVtYmVycyAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKSlcbiJdLCJzb3VyY2VSb290IjoiIn0=